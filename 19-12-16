YARN(YET ANOTHRT RESOURCE NEGOTIATOR)
THE NEW ARCH INTRO IN HADOOP-0.23:
1.DIVIDES THE MAJOR FUN OF THE JOBTRACKER
  1.RESOURCE MANAGEMENT
  2.JOB LIFE CYCLE MANAGEMENT
2.CORE COMPONENTS:
>RESOURCE
>APPLICATION MASTER
>NODE MANAGER
>CONTAINERS

HADOOP1.0 
 MAPREDUCE :CLUSTER RESOURCE MANAGEMENT AND DATA PROCESSING
 HDFC:FILE STORAGE

HADOOP2.0
MR2 :DATA PROCESSING
OTHER :DATA PROCESSING

YARN:CLUSTER RESOURCE MANAGEMENT AND DATA PROCESSING

HDFS:FILE STORAGE.

YARN HIGH LEVEL ARCH:
RESOURCE MANAGER:RUNS ON MASTER NODE,GLOBAL RESOURCE SCHEDULER,IND.SYS RESOURCE IN APP COMPUTING.
NODE MANAGER:RUNS ON SLAVE NODES AND COMMUNICATES WITH RESOURCE MANAGER
CONTAINERS:CREATED BY THE RESOURCE MANAGER UPON REQ,ALLOCATE RESOURCES ON SLAVE NODE,APP RUN ONE OR MORE CONTAINE.
APPLICATION MASTER:ONE PER APPLICTION,APPLICATION SPECIFIC ,RUN IN CONTAINER,REQ MORE COONTAINERS TO RUN APP TASKS.


JOBTRACKER AND TASKTRACKER NO MORE WITHMAP-REDUCE NEW VERSION .
OLD MAP-REDUCE VERSION KNOWN AS A MR1 AND NEW MAP-REDUCE VERSION KNOW AS MR2.
MR1 WAS NOT ABLE TO DO SO.IT WOULD ONLY RUN MAPREDUCE APPLICATIONS.
THE NEW MODEL IS MORE ISOLATED AND SCLABLE AS COMPARED TO THE EALIER MR1 SYSTEM.
MAP-REDUCE PERFORM DATA PROCESSING VIA YARN.
ARCH FOR MAPRESUCE:SEE IN WILEY


LIMITATION OF MR1:
OVERLOAD ON JOBTRACKER MANAGING RESOURCE MANAGEMENT AND DATA PROCESSING

ONE JOBTRACKER PER CLUSTER-LIMITS OF ABOUT 4000 NODES PER CLUSTER

PROBLEM IN PERFORMING REAL-TIME ANALYSIS

1ST PROG
WORDCOUNT********
------------------
BLOCK1
WE ARE LEARNING HADOOP
WE ARE LEARNING HADOOP

BLOCK2
WE ARE LEARNING HADOOP
WE ARE LEARNING HADOOP
WE ARE LEARNING HADOOP

ARE-5
HADOOP-5
LEARNING-5
WE-5

I/PKEY-ROW NO
I/P VALUE-ENTIRE ROW
O/P KEY-WORD
O/P VALUE-CONT OF EACH WORD-1
MAPPER1 
WE-1
ARE-1
LEARNING-1
HADOOP-1
WE-1
ARE-1
LEARNING-1
HADOOP-1

MAPPER2
WE-1
ARE-1
LEARNING-1
HADOOP-1
WE-1
ARE-1
LEARNING-1
HADOOP-1
WE-1
ARE-1
LEARNING-1
HADOOP-1

SORT+SHUFFLE
------------
ARE(1,1,1,1,1)
HADOOP(1,1,1,1,1)
LEARNING(1,1,1,1,1)
WE(1,1,1,1,1)

REDUCER
-------
ARE,5
HADOOP,5
LEARNING,5
WE,5


$ hadoop fs -mkdir /prog
$ nano prog1.txt
$ getit prog1.txt
$cat prog1.txt
$ hadoop fs -copyFromLocal prog1.txt /prog
$ hadoop fs -cat /prog/prog1.txt


create jar file in eclipse

write click on jar file 
java build path >config>library>(usr>local>hadoop>share>hadoop>yarn)

see youtube


on ubuntu

>ls prog_wc.jar
>hadoop jar prog_wc.jar WordCount_prog /prog/prog1.txt /prog/mr_output1
o/p >

in eclips
create a class as a WordCount_prog
{

}
see word file and file name is meenu.
